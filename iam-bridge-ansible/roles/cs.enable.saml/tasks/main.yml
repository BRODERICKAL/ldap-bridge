---

- name: retrieve token for future oc login
  shell: oc whoami -t
  register: token_roks

- name: set token fact
  set_fact:
    roks_token: "{{ token_roks.stdout }}"

- name: retrieve roks address for future oc login
  shell: oc get cm ibmcloud-cluster-info -n kube-public -o jsonpath='{.data.cluster_kube_apiserver_host}:{.data.cluster_kube_apiserver_port}'
  register: address_roks

- name: set roks fact
  set_fact:
    roks_address: "{{ address_roks.stdout }}"

- name: login with cloudctl
  shell: cloudctl login -a {{ cs_host }} -u {{ cs_user }} -p {{ cs_pass }} -n {{ namespace }}

- name: enable SAML
  shell: cloudctl iam saml-enable

- name: pause while SAML is enabled
  pause:
    seconds: 30

- name: export metadata
  shell: cloudctl iam saml-export-metadata --file /tmp/meta.xml

- name: get providerID url
  shell: cat /tmp/meta.xml | egrep -o "entityID.*?defaultSP" | egrep -o "http.*"
  register: providerID

- name: print parsed providerID url
  debug:
    var: providerID.stdout

- name: get acs url
  shell: cat /tmp/meta.xml | egrep -o "AssertionConsumerService.*?acs" | egrep -o "http.*"
  register: acs

- name: print parsed acs url
  debug:
    var: acs.stdout

- name: expose providerID url
  set_fact:
    provider_id: "{{ providerID.stdout }}"

- name: expose acs url
  set_fact:
    assertion_consumer_service_url: "{{ acs.stdout }}"